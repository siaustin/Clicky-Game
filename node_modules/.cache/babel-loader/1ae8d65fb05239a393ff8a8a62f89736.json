{"ast":null,"code":"import _classCallCheck from \"/Users/siaustin/Boot-Camp-Work/Homework/Clicky-Game/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/siaustin/Boot-Camp-Work/Homework/Clicky-Game/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/siaustin/Boot-Camp-Work/Homework/Clicky-Game/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/siaustin/Boot-Camp-Work/Homework/Clicky-Game/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/siaustin/Boot-Camp-Work/Homework/Clicky-Game/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/siaustin/Boot-Camp-Work/Homework/Clicky-Game/my-app/src/App.js\";\nimport React, { Component } from \"react\";\nimport images from \"./images.json\";\nimport Image from \"./components/Image\";\nimport Wrapper from \"./components/Wrapper\";\nshuffle(images);\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      images: images,\n      score: 0,\n      topScore: 0,\n      text: \"Click an image to begin!\",\n      class: \"\"\n    };\n\n    _this.animEnd = function () {\n      _this.setState({\n        class: \"\"\n      });\n    };\n\n    _this.isClicked = function (boolean, id) {\n      if (boolean) {\n        _this.state.images.map(function (element) {\n          return element.clicked = false;\n        });\n\n        shuffle(_this.state.images);\n\n        _this.setState({\n          images: images,\n          score: 0,\n          topScore: _this.state.score,\n          text: \"You guessed incorrectly!\",\n          class: \"incorrect\"\n        });\n      } else {\n        _this.state.images.map(function (element) {\n          if (element.id === id) {\n            element.clicked = true;\n          }\n\n          return element;\n        });\n\n        shuffle(_this.state.images);\n\n        _this.setState({\n          images: images,\n          score: _this.state.score + 1,\n          text: \"You guessed correctly!\",\n          class: \"correct\"\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Wrapper, {\n        score: this.state.score,\n        topScore: this.state.topScore,\n        text: this.state.text,\n        class: this.state.class,\n        anim: this.animEnd,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, this.state.images.map(function (image) {\n        return React.createElement(ImageCard, {\n          key: image.id,\n          id: image.id,\n          image: image.imageSrc,\n          name: image.name,\n          clicked: image.clicked,\n          isClicked: _this2.isClicked,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        });\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nfunction shuffle(a) {\n  for (var i = a.length - 1; i > 0; i--) {\n    var j = Math.floor(Math.random() * (i + 1));\n    var _ref = [a[j], a[i]];\n    a[i] = _ref[0];\n    a[j] = _ref[1];\n  }\n\n  return a;\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/siaustin/Boot-Camp-Work/Homework/Clicky-Game/my-app/src/App.js"],"names":["React","Component","images","Image","Wrapper","shuffle","App","state","score","topScore","text","class","animEnd","setState","isClicked","boolean","id","map","element","clicked","image","imageSrc","name","a","i","length","j","Math","floor","random"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport images from \"./images.json\";\nimport Image from \"./components/Image\";\nimport Wrapper from \"./components/Wrapper\";\n\nshuffle(images);\nclass App extends Component {\n  state = {\n    images: images,\n    score: 0,\n    topScore: 0,\n    text: \"Click an image to begin!\",\n    class: \"\"\n  };\n  animEnd = () => {\n    this.setState({\n      class: \"\"\n    });\n  };\n  isClicked = (boolean, id) => {\n    if (boolean) {\n      this.state.images.map(element => {\n        return (element.clicked = false);\n      });\n      shuffle(this.state.images);\n      this.setState({\n        images: images,\n        score: 0,\n        topScore: this.state.score,\n        text: \"You guessed incorrectly!\",\n        class: \"incorrect\"\n      });\n    } else {\n      this.state.images.map(element => {\n        if (element.id === id) {\n          element.clicked = true;\n        }\n        return element;\n      });\n      shuffle(this.state.images);\n      this.setState({\n        images: images,\n        score: this.state.score + 1,\n        text: \"You guessed correctly!\",\n        class: \"correct\"\n      });\n    }\n  };\n  render() {\n    return (\n      <Wrapper\n        score={this.state.score}\n        topScore={this.state.topScore}\n        text={this.state.text}\n        class={this.state.class}\n        anim={this.animEnd}\n      >\n        {this.state.images.map(image => {\n          return (\n            <ImageCard\n              key={image.id}\n              id={image.id}\n              image={image.imageSrc}\n              name={image.name}\n              clicked={image.clicked}\n              isClicked={this.isClicked}\n            />\n          );\n        })}\n      </Wrapper>\n    );\n  }\n}\n\nfunction shuffle(a) {\n  for (let i = a.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [a[i], a[j]] = [a[j], a[i]];\n  }\n  return a;\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}